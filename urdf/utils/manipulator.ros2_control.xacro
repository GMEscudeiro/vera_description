<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">
    <xacro:macro name="manipulator_ros2_control" params="name initial_positions_file">
      <xacro:property name="initial_positions" value="${xacro.load_yaml(initial_positions_file)['initial_positions']}"/>
      <xacro:arg name="simulation" default="False"/>

      <xacro:if value="$(arg simulation)">
        <ros2_control name="${name}" type="system">
            <hardware>
                <!-- By default, set up controllers for simulation. This won't work on real hardware -->
                <plugin>mock_components/GenericSystem</plugin>
            </hardware>
            <joint name="elevator_part_to_elevator_base">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['elevator_part_to_elevator_base']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_shoulder_pan_joint">
                <param name="id">200</param>
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_shoulder_pan_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_shoulder_lift_joint">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_shoulder_lift_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_elbow_pan_joint">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_elbow_pan_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_elbow_lift_joint">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_elbow_lift_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_wrist_pan_joint">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_wrist_pan_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_wrist_lift_joint">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_wrist_lift_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="gripper_left_joint">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['gripper_left_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="gripper_right_joint">
                <command_interface name="position"/>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['gripper_right_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
        </ros2_control>
      </xacro:if>

      <xacro:unless value="$(arg simulation)">
        <ros2_control name="${name}" type="system">
            <hardware>
                <!-- By default, set up controllers for simulation. This won't work on real hardware -->
                <plugin>dynamixel_hardware/DynamixelHardware</plugin>
                <param name="usb_port">/dev/ttyACM1</param>
                <param name="baud_rate">57600</param>
            </hardware>
            <joint name="manipulator_shoulder_pan_joint">
                <param name="id">1</param>
                <command_interface name="position">
                  <param name="min">-1.57</param>
                  <param name="max">1.57</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_shoulder_pan_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_shoulder_lift_joint">
                <param name="id">2</param>
                <command_interface name="position">
                  <param name="min">-1.57</param>
                  <param name="max">1.57</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_shoulder_lift_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_elbow_pan_joint">
                <param name="id">3</param>
                <command_interface name="position">
                  <param name="min">-1.57</param>
                  <param name="max">1.57</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_elbow_pan_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_elbow_lift_joint">
                <param name="id">4</param>
                <command_interface name="position">
                    <param name="min">-2.55</param>
                    <param name="max">0.9</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_elbow_lift_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_wrist_pan_joint">
                <param name="id">5</param>
                <command_interface name="position">
                    <param name="min">-2.879793</param>
                    <param name="max">2.879793</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_wrist_pan_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="manipulator_wrist_lift_joint">
                <param name="id">6</param>
                <command_interface name="position">
                    <param name="min">-0.64</param>
                    <param name="max">0.64</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['manipulator_wrist_lift_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="gripper_left_joint">
                <param name="id">8</param>
                <command_interface name="position">
                    <param name="min">0.0</param>
                    <param name="max">0.8</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['gripper_left_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
            <joint name="gripper_right_joint">
                <param name="id">7</param>
                <command_interface name="position">
                    <param name="min">-0.8</param>
                    <param name="max">0.0</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['gripper_right_joint']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
        </ros2_control>
        <ros2_control name="elevator" type="system">
            <hardware>
                <plugin>hera_elevator_control/HeraElevatorHardwareControl</plugin>
                <param name = "elevator_part">elevator_part_to_elevator_base</param>
                <param name = "loop_rate">50</param>
                <param name = "device">/dev/elevator</param>
                <param name = "baud_rate">115200</param>
                <param name = "timeout_ms">1000</param>
            </hardware>
            <joint name="elevator_part_to_elevator_base">
                <command_interface name="position">
                  <param name="min">-0.254</param>
                  <param name="max">0.254</param>
                </command_interface>
                <state_interface name="position">
                  <param name="initial_value">${initial_positions['elevator_part_to_elevator_base']}</param>
                </state_interface>
                <state_interface name="velocity"/>
            </joint>
        </ros2_control>
      </xacro:unless>
    </xacro:macro>
</robot>
